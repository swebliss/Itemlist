# Name of the GitHub Actions workflow as it will appear in the Actions tab
name: Deploy Jekyll site to Pages

# Trigger the workflow when code is pushed to the main branch or manually from the Actions tab
on:
  push:
    branches: [main] # Replace 'main' with your default branch if different
  workflow_dispatch: # Enables manual trigger from GitHub UI

# Set permissions so the workflow can deploy to GitHub Pages
permissions:
  contents: read      # Read access to the repo
  pages: write        # Write access to publish the site
  id-token: write     # Required for deploying securely

# Only allow one deploy at a time, don't cancel any in-progress deployments
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build: # Job to build the site
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # Pulls the code from your GitHub repo

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1 # Installs Ruby for Jekyll
        with:
          ruby-version: '3.1' # Use Ruby 3.1
          bundler-cache: true # Automatically runs `bundle install` and caches gems
          cache-version: 0    # Use to force cache refresh if needed

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5 # Configures the output path for Pages deploy

      - uses: actions/setup-python@v5 # Optional: needed if you use a Python script
        with:
          python-version: '3.12'

      - name: Run sanitize script
        run: python build-scripts/sanitize_items.py # Cleans up or processes your JSON data before build

      - name: Clean Jekyll cache
        run: bundle exec jekyll clean # Deletes cached site data so the build is fresh

      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}" # Builds the site into _site/
        env:
          JEKYLL_ENV: production # Sets the environment to production mode

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # Prepares the _site folder for deployment

  deploy: # Job to deploy the site to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Displays the live URL after deploy
    runs-on: ubuntu-latest
    needs: build # Only run after the build job finishes
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Deploys the _site output to GitHub Pages
